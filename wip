#!/bin/bash

set -e

if [ -z "$1" ]
then
    echo "Usage: $(basename "$0") [amend commit continue push rebase rebase-onto reset]"
    exit 85
fi

function confirm {
    read -r -p "$0: continue? " response
    [[ "$response" =~ ^[yY] ]]
}

function do_amend {
    local status
    status="$(git status --porcelain --untracked-files=no 2> /dev/null)"
    if [ -n "${status}" ]
    then
        echo '👷‍♀️ git commit'
        git commit --all --amend --no-edit
    fi
}

function do_commit {
    echo '👷‍♀️ git commit'
    git commit --all -m 'WIP'
}

function do_continue {
    if [ -f '.git/CHERRY_PICK_HEAD' ]; then
        echo '👷‍♀️ git cherry-pick --continue'
        git cherry-pick --continue
    elif [ -f '.git/REBASE_HEAD' ]; then
        echo '👷‍♀️ git rebase --continue'
        git rebase --continue
    fi
}

function do_push {
    local branch
    local remote
    branch="$(git rev-parse --abbrev-ref HEAD)"
    : "${remote:=$(git config branch."$branch".remote)}" "${remote:=origin}"
    echo '👷‍♀️ git push'
    git push --set-upstream $remote "+$branch"
}

function do_rebase {
    local remote
    local branch
    branch="$(git rev-parse --abbrev-ref HEAD)"
    : "${remote:=$(git config branch."$branch".remote)}" "${remote:=origin}"
    echo '👷‍♀️ git fetch'
    git fetch --quiet
    echo '👷‍♀️ git rebase'
    git rebase --quiet "$remote/master"
}

function do_rebase_onto() {
    base_branch="$1"
    current_branch="$(git rev-parse --abbrev-ref HEAD)"

    echo '👷‍♀️ git checkout'
    git checkout --quiet "$base_branch"
    base_rev="$(git rev-parse HEAD)"
    do_rebase

    echo '👷‍♀️ git checkout'
    git checkout --quiet "$current_branch"

    echo '👷‍♀️ git rebase --onto'
    git rebase --quiet --onto "$base_branch" "$base_rev" "$current_branch"
}

function do_reset {
    local remote
    local branch
    branch="$(git rev-parse --abbrev-ref HEAD)"
    : "${remote:=$(git config branch."$branch".remote)}" "${remote:=origin}"

    echo '👷‍♀️ git fetch'
    git fetch

    echo '👷‍♀️ git reset --hard'
    git reset --hard "$remote/$branch"
}

case "$1" in
amend)
    do_amend
    ;;
commit|wip)
    do_commit
    ;;
continue)
    do_continue
    ;;
push)
    do_push
    ;;
rebase)
    do_rebase
    ;;
rebase-onto)
    do_rebase_onto "$2"
    ;;
reset)
    confirm && do_reset
    ;;
*)
    echo "Unknown command '$1'"
    exit 1
    ;;
esac
